apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: linkedingress
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XLinkedIngress
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            mergeOptions:
              appendSlice: true

        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]

        - type: FromCompositeFieldPath
          fromFieldPath: spec.serviceName
          toFieldPath: metadata.namespace

        - type: FromCompositeFieldPath
          fromFieldPath: spec.serviceName
          toFieldPath: spec.forProvider.manifest.metadata.namespace
  resources:
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: django-ingress
          namespace: to-be-patched
        spec:
          forProvider:
            manifest:
              apiVersion: networking.k8s.io/v1
              kind: Ingress
              metadata:
                annotations:
                  'alb.ingress.kubernetes.io/load-balancer-name': foobar
                  'alb.ingress.kubernetes.io/scheme': internal
                  'alb.ingress.kubernetes.io/target-type': ip
                  'kubernetes.io/ingress.class': alb
              spec:
                defaultBackend:
                  service:
                    name: to-be-patched
                    port:
                      number: 80
      patches:
        - type: PatchSet
          patchSetName: common-fields

        - type: FromCompositeFieldPath
          fromFieldPath: spec.serviceName
          toFieldPath: spec.forProvider.manifest.spec.defaultBackend.service.name
          policy:
            fromFieldPath: Required

        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.manifest.status.loadBalancer.ingress[0].hostname
          toFieldPath: metadata.annotations.ingressHostname
          policy:
            fromFieldPath: Required


    - base:
        apiVersion: route53.aws.crossplane.io/v1alpha1
        kind: ResourceRecordSet
        metadata:
          name: XXX
          namespace: django
        spec:
          forProvider:
            aliasTarget:
              evaluateTargetHealth: false
              hostedZoneId: XXX
              dnsName: XXX
            type: A
            zoneId: XXX
      patches:
      - type: PatchSet
        patchSetName: common-fields

      - type: FromCompositeFieldPath
        fromFieldPath: spec.resourceConfig.hostedZoneId
        toFieldPath: spec.forProvider.aliasTarget.hostedZoneId

      - type: FromCompositeFieldPath
        fromFieldPath: spec.resourceConfig.zoneId
        toFieldPath: spec.forProvider.zoneId

#        - type: FromCompositeFieldPath
#          fromFieldPath: metadata.annotations.ingress.hostname
#          toFieldPath: spec.forProvider.aliasTarget.dnsName
#
      - type: FromCompositeFieldPath
        fromFieldPath: spec.fqdn
        toFieldPath: metadata.name